From f108c5aa637e9e693980b93cbd409aa64e503633 Mon Sep 17 00:00:00 2001
From: Jiangyi <sam.andrew.jiang@gmail.com>
Date: Sun, 13 Sep 2015 14:24:33 +0200
Subject: [PATCH] build: Add chromium prebuilt support to envsetup.sh && The 
 core Makefile

This adds a chromium_prebuilt function to envsetup.sh that is invoked by lunch to check
whether the chromium prebuilts are up-to-date or not. If not, it will be built from source
and then the new source built version will be pulled during brunch/mka bacon to become the
new prebuilts for future builds.

This is all opt-in through the USE_PREBUILT_CHROMIUM flag. Without it being set to 1,
none of this would be ran, and regular operations will go on.

PS13:
-use export TARGET_DEVICE
-replace git -C with params compatible to old git versions
---
 core/Makefile |  8 ++++++++
 envsetup.sh   | 28 +++++++++++++++++++++++++++-
 2 files changed, 35 insertions(+), 1 deletion(-)

diff --git a/core/Makefile b/core/Makefile
index a0d0854..11070bb 100644
--- a/core/Makefile
+++ b/core/Makefile
@@ -1738,6 +1738,14 @@ CM_TARGET_PACKAGE := $(PRODUCT_OUT)/cm-$(CM_VERSION).zip
 .PHONY: otapackage bacon
 otapackage: $(INTERNAL_OTA_PACKAGE_TARGET)
 bacon: otapackage
+
+ifeq ($(USE_PREBUILT_CHROMIUM),1)
+ifneq ($(PRODUCT_PREBUILT_WEBVIEWCHROMIUM),yes)
+	@echo "Running Chromium prebuilt setup script..."
+	$(hide) . $(TOPDIR)vendor/cm/tools/chromium_prebuilt.sh $(TOP)
+endif
+endif
+
 	$(hide) ln -f $(INTERNAL_OTA_PACKAGE_TARGET) $(CM_TARGET_PACKAGE)
 	$(hide) $(MD5SUM) $(CM_TARGET_PACKAGE) > $(CM_TARGET_PACKAGE).md5sum
 	@echo -e ${CL_CYN}"Package Complete: $(CM_TARGET_PACKAGE)"${CL_RST}
diff --git a/envsetup.sh b/envsetup.sh
index 4be6ceb..e6a6383 100644
--- a/envsetup.sh
+++ b/envsetup.sh
@@ -649,6 +649,13 @@ function lunch()
 
     echo
 
+    if [[ $USE_PREBUILT_CHROMIUM -eq 1 ]]; then
+        chromium_prebuilt
+    else
+        # Unset flag in case user opts out later on
+        export PRODUCT_PREBUILT_WEBVIEWCHROMIUM=""
+    fi
+
     fixup_common_out_dir
 
     set_stuff_for_environment
@@ -2636,7 +2643,26 @@ function make()
     mk_timer $(get_make_command) "$@"
 }
 
-
+function chromium_prebuilt() {
+    T=$(gettop)
+    export TARGET_DEVICE=$(get_build_var TARGET_DEVICE)
+    hash=$T/prebuilts/chromium/$TARGET_DEVICE/hash.txt
+    libsCheck=$T/prebuilts/chromium/$TARGET_DEVICE/lib/libwebviewchromium.so
+    libsCheckLoader=$T/prebuilts/chromium/$TARGET_DEVICE/lib/libwebviewchromium_loader.so
+    libsCheckSupport=$T/prebuilts/chromium/$TARGET_DEVICE/lib/libwebviewchromium_plat_support.so
+    AppCheck=$T/prebuilts/chromium/$TARGET_DEVICE/app/webview/webview.apk
+    AppLibCheck=$T/prebuilts/chromium/$TARGET_DEVICE/app/webview/lib/arm/libwebviewchromium.so
+    device_target=$T/prebuilts/chromium/$TARGET_DEVICE/
+
+    if [ -r $hash ] && [ $(git --git-dir=$T/external/chromium_org/.git --work-tree=$T/external/chromium_org rev-parse --verify HEAD) == $(cat $hash) ] && [ -f $libsCheck ]  && [ -f $libsCheckLoader ] && [ -f $libsCheckSupport ]  && [ -f $AppCheck ] && [ -L $AppLibCheck ]; then
+        export PRODUCT_PREBUILT_WEBVIEWCHROMIUM=yes
+        echo -e "\033[1m\033[36mPrebuilt Chromium is up-to-date: \033[1m\033[32mWill be used for build\033[0m"
+    else
+        export PRODUCT_PREBUILT_WEBVIEWCHROMIUM=no
+        echo -e "\033[1m\033[36mPrebuilt Chromium out-of-date or not found: \033[1m\033[33mWill build from source\033[0m"
+        rm -rfv $device_target &>/dev/null
+    fi
+}
 
 if [ "x$SHELL" != "x/bin/bash" ]; then
     case `ps -o command -p $$` in
-- 
2.5.1

